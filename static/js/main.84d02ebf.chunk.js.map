{"version":3,"sources":["components/layout/Header.js","Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","to","branding","defaultProps","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","data","this","value","children","Component","Consumer","Contact","isInfoShown","onShowClick","onDeleteClick","a","delete","name","email","phone","style","display","onClick","cursor","marginLeft","marginRight","bind","color","Contacts","c","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","evt","target","onSubmit","preventDefault","length","post","history","push","Test","title","body","EditContact","match","params","put","res","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"iQAIA,SAASA,EAAOC,GACd,OACE,yBAAKC,UAAU,2DACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gBACpBD,EAAMG,UAET,wBAAIF,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,YACrB,uBAAGA,UAAU,gBADf,UAIF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMC,GAAG,eAAeD,UAAU,YAChC,uBAAGA,UAAU,gBADf,SAIF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,YAC1B,uBAAGA,UAAU,oBADf,cAUZF,EAAOK,aAAe,CACpBD,SAAU,mBAOGJ,Q,8FCtCTM,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAO,2BACFF,GADL,IAEEG,SAAUH,EAAMG,SAASC,QACvB,SAACC,GAAD,OAAaA,EAAQC,KAAOL,EAAOM,aAGzC,IAAK,cACH,OAAO,2BACFP,GADL,IAEEG,SAAS,CAAEF,EAAOM,SAAV,mBAAsBP,EAAMG,aAExC,IAAK,iBACH,OAAO,2BACFH,GADL,IAEEG,SAAUH,EAAMG,SAASK,KAAI,SAACH,GAAD,OAC3BA,EAAQC,KAAOL,EAAOM,QAAQD,GACzBD,EAAUJ,EAAOM,QAClBF,OAIV,QACE,OAAOL,IAIAS,EAAb,4MACET,MAAQ,CACNG,SAAU,GACVO,SAAU,SAACT,GAAD,OAAY,EAAKU,UAAS,SAACX,GAAD,OAAWD,EAAQ,EAAKC,MAAOC,QAHvE,oMAOqCW,IAAMC,IACrC,8CARN,gBAOkBV,EAPlB,EAOYW,KAIRC,KAAKJ,SAAS,CAAER,aAXpB,qIAeI,OACE,kBAACP,EAAQa,SAAT,CAAkBO,MAAOD,KAAKf,OAC3Be,KAAKxB,MAAM0B,cAjBpB,GAA8BpB,IAAMqB,WAuBvBC,EAAWvB,EAAQuB,SCajBC,E,4MA3DbpB,MAAQ,CACNqB,aAAa,G,EAGfC,YAAc,WACZ,EAAKX,SAAS,CAAEU,aAAc,EAAKrB,MAAMqB,e,EAG3CE,c,uCAAgB,WAAOb,EAAUJ,GAAjB,SAAAkB,EAAA,+EAENZ,IAAMa,OAAN,qDAA2DnB,IAFrD,6EAKZI,EAAS,CAAER,KAAM,iBAAkBK,QAASD,IALhC,0E,+GASN,IAAD,SAC4BS,KAAKxB,MAAMc,QAAtCqB,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,MAAOtB,EADrB,EACqBA,GAC5B,OACE,kBAACa,EAAD,MACG,gBAAGT,EAAH,EAAGA,SAAH,OACC,yBAAKlB,UAAU,uBACb,wBAAIqC,MAAO,CAAEC,QAAS,SACnBJ,EAAM,IACP,uBACElC,UAAU,mBACVuC,QAAS,EAAKT,YACdO,MAAO,CAAEG,OAAQ,aAEnB,kBAAC,IAAD,CACEvC,GAAE,uBAAkBa,GACpBuB,MAAO,CACLG,OAAQ,UACRC,WAAY,OACZC,YAAa,QAGf,uBAAG1C,UAAU,uBAEf,uBACEA,UAAU,eACVuC,QAAS,EAAKR,cAAcY,KAAK,EAAMzB,EAAUJ,GACjDuB,MAAO,CAAEG,OAAQ,UAAWI,MAAO,UAGtC,EAAKpC,MAAMqB,YACV,wBAAI7B,UAAU,cACZ,wBAAIA,UAAU,mBAAd,UAAwCmC,GACxC,wBAAInC,UAAU,mBAAd,UAAwCoC,IAExC,a,GAxDMV,aCiBPmB,E,uKAjBX,OACE,kBAAClB,EAAD,MACG,gBAAGhB,EAAH,EAAGA,SAAH,OACC,oCACE,wBAAIX,UAAU,kBACZ,0BAAMA,UAAU,eAAhB,WADF,SAGCW,EAASK,KAAI,SAAC8B,GAAD,OACZ,kBAAC,EAAD,CAASC,IAAKD,EAAEhC,GAAID,QAASiC,e,GAVpBzC,IAAMqB,W,yBCAvBsB,EAAiB,SAAC,GAAD,IACrBd,EADqB,EACrBA,KACAe,EAFqB,EAErBA,MACAvC,EAHqB,EAGrBA,KACAwC,EAJqB,EAIrBA,YACA1B,EALqB,EAKrBA,MACA2B,EANqB,EAMrBA,SACAC,EAPqB,EAOrBA,MAPqB,OASrB,yBAAKpD,UAAU,cACb,2BAAOqD,QAASnB,GAAOe,GACvB,2BACEvC,KAAMA,EACNwB,KAAMA,EACNlC,UAAWsD,IAAW,+BAAgC,CACpD,aAAcF,IAEhBF,YAAaA,EACb1B,MAAOA,EACP2B,SAAUA,IAEXC,GAAS,yBAAKpD,UAAU,oBAAoBoD,KAcjDJ,EAAe7C,aAAe,CAC5BO,KAAM,QAGOsC,QCoDAO,E,4MAzFb/C,MAAQ,CACN0B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPoB,OAAQ,I,EAGVL,SAAW,SAACM,GAAD,OAAS,EAAKtC,SAAL,eAAiBsC,EAAIC,OAAOxB,KAAOuB,EAAIC,OAAOlC,S,EAElEmC,S,uCAAW,WAAOzC,EAAUuC,GAAjB,yBAAAzB,EAAA,yDACTyB,EAAIG,iBADK,EAEsB,EAAKpD,MAA5B0B,EAFC,EAEDA,KAAMC,EAFL,EAEKA,MAAOC,EAFZ,EAEYA,MAChBF,EAAK2B,OAHD,uBAIP,EAAK1C,SAAS,CAAEqC,OAAQ,CAAEtB,KAAM,sBAJzB,6BAOJC,EAAM0B,OAPF,uBAQP,EAAK1C,SAAS,CAAEqC,OAAQ,CAAErB,MAAO,sBAR1B,6BAYJC,EAAMyB,OAZF,wBAaP,EAAK1C,SAAS,CAAEqC,OAAQ,CAAEpB,MAAO,uBAb1B,4CAiBchB,IAAM0C,KAC3B,8CACA,EAAKtD,OAnBE,iBAiBDc,EAjBC,EAiBDA,KAKRJ,EAAS,CACPR,KAAM,cACNK,QAASO,IAGX,EAAKH,SAAS,CAAEe,KAAM,GAAIC,MAAO,GAAIC,MAAO,GAAIoB,OAAQ,KACxD,EAAKzD,MAAMgE,QAAQC,KAAK,KA5Bf,4C,+GA+BD,IAAD,SACgCzC,KAAKf,MAApC0B,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,MAAOoB,EADrB,EACqBA,OAC5B,OACE,kBAAC7B,EAAD,MACG,gBAAGT,EAAH,EAAGA,SAAH,OACC,yBAAKlB,UAAU,aACb,yBAAKA,UAAU,eAAf,eACA,0BACEA,UAAU,YACV2D,SAAU,EAAKA,SAAShB,KAAK,EAAMzB,IAEnC,kBAAC,EAAD,CACE+B,MAAM,OACNf,KAAK,OACLV,MAAOU,EACPgB,YAAY,aACZC,SAAU,EAAKA,SACfC,MAAOI,EAAOtB,OAEhB,kBAAC,EAAD,CACEe,MAAM,QACNf,KAAK,QACLxB,KAAK,QACLc,MAAOW,EACPe,YAAY,cACZC,SAAU,EAAKA,SACfC,MAAOI,EAAOrB,QAEhB,kBAAC,EAAD,CACEc,MAAM,QACNf,KAAK,QACLxB,KAAK,MACLc,MAAOY,EACPc,YAAY,cACZC,SAAU,EAAKA,SACfC,MAAOI,EAAOpB,QAGhB,4BAAQ1B,KAAK,SAASV,UAAU,2BAAhC,wB,GA/EW0B,a,OCHV,oBACb,6BACE,wBAAI1B,UAAU,aAAd,0BACA,uBAAGA,UAAU,QAAb,iCACA,yBAAKA,UAAU,kBAAf,iBCJW,oBACb,6BACE,wBAAIA,UAAU,aACZ,0BAAMA,UAAU,eAAhB,OADF,mBAGA,uBAAGA,UAAU,QAAb,qCCYWiE,E,4MAhBbzD,MAAQ,CACN0D,MAAO,GACPC,KAAM,I,uDAGE,IAAD,EACiB5C,KAAKf,MAArB0D,EADD,EACCA,MAAOC,EADR,EACQA,KACf,OACE,6BACE,4BAAKD,GACL,2BAAIC,Q,GAXOzC,aCqGJ0C,E,4MAjGb5D,MAAQ,CACN0B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPoB,OAAQ,I,EAYVL,SAAW,SAACM,GAAD,OAAS,EAAKtC,SAAL,eAAiBsC,EAAIC,OAAOxB,KAAOuB,EAAIC,OAAOlC,S,EAElEmC,S,uCAAW,WAAOzC,EAAUuC,GAAjB,yBAAAzB,EAAA,yDACTyB,EAAIG,iBADK,EAEsB,EAAKpD,MAA5B0B,EAFC,EAEDA,KAAMC,EAFL,EAEKA,MAAOC,EAFZ,EAEYA,MAChBF,EAAK2B,OAHD,uBAIP,EAAK1C,SAAS,CAAEqC,OAAQ,CAAEtB,KAAM,sBAJzB,6BAOJC,EAAM0B,OAPF,uBAQP,EAAK1C,SAAS,CAAEqC,OAAQ,CAAErB,MAAO,sBAR1B,6BAYJC,EAAMyB,OAZF,wBAaP,EAAK1C,SAAS,CAAEqC,OAAQ,CAAEpB,MAAO,uBAb1B,kCAiBDtB,EAAO,EAAKf,MAAMsE,MAAMC,OAAxBxD,GAjBC,UAmBSM,IAAMmD,IAAN,qDAC8BzD,GAC9C,CAAEoB,OAAMC,QAAOC,UArBR,QAmBHoC,EAnBG,OAwBTtD,EAAS,CAAER,KAAM,iBAAkBK,QAASyD,EAAIlD,OAEhD,EAAKH,SAAS,CAAEe,KAAM,GAAIC,MAAO,GAAIC,MAAO,GAAIoB,OAAQ,KACxD,EAAKzD,MAAMgE,QAAQC,KAAK,KA3Bf,4C,qPAVDlD,EAAOS,KAAKxB,MAAMsE,MAAMC,OAAxBxD,G,SACeM,IAAMC,IAAN,qDACyBP,I,gBADxCQ,E,EAAAA,KAIRC,KAAKJ,SAAS,CAAEe,KAAMZ,EAAKY,KAAMC,MAAOb,EAAKa,MAAOC,MAAOd,EAAKc,Q,qIAmCxD,IAAD,SACgCb,KAAKf,MAApC0B,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,MAAOoB,EADrB,EACqBA,OAC5B,OACE,kBAAC7B,EAAD,MACG,gBAAGT,EAAH,EAAGA,SAAH,OACC,yBAAKlB,UAAU,aACb,yBAAKA,UAAU,eAAf,gBACA,0BACEA,UAAU,YACV2D,SAAU,EAAKA,SAAShB,KAAK,EAAMzB,IAEnC,kBAAC,EAAD,CACE+B,MAAM,OACNf,KAAK,OACLV,MAAOU,EACPgB,YAAY,aACZC,SAAU,EAAKA,SACfC,MAAOI,EAAOtB,OAEhB,kBAAC,EAAD,CACEe,MAAM,QACNf,KAAK,QACLxB,KAAK,QACLc,MAAOW,EACPe,YAAY,cACZC,SAAU,EAAKA,SACfC,MAAOI,EAAOrB,QAEhB,kBAAC,EAAD,CACEc,MAAM,QACNf,KAAK,QACLxB,KAAK,MACLc,MAAOY,EACPc,YAAY,cACZC,SAAU,EAAKA,SACfC,MAAOI,EAAOpB,QAGhB,4BAAQ1B,KAAK,SAASV,UAAU,2BAAhC,2B,GAvFY0B,aCkCX+C,MA1Bf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,yBAAKzE,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0E,OAAK,EAACC,KAAK,IAAIC,UAAW/B,IACjC,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,eAAeC,UAAWrB,IAC5C,kBAAC,IAAD,CACEmB,OAAK,EACLC,KAAK,oBACLC,UAAWR,IAEb,kBAAC,IAAD,CAAOM,OAAK,EAACC,KAAK,SAASC,UAAWC,IACtC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,QAAQC,UAAWX,IACrC,kBAAC,IAAD,CAAOW,UAAWE,UClBZC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASb,MACvB,2DCZNc,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA1C,GACL2C,QAAQ3C,MAAMA,EAAM4C,c","file":"static/js/main.84d02ebf.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header(props) {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          {props.branding}\n        </Link>\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link to=\"/\" className=\"nav-link\">\n              <i className=\"fas fa-home\"></i> Home\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/contact-add\" className=\"nav-link\">\n              <i className=\"fas fa-plus\"></i> Add\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/about\" className=\"nav-link\">\n              <i className=\"fas fa-question\"></i> About\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nHeader.defaultProps = {\n  branding: \"Contact Manager\",\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        ),\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends React.Component {\n  state = {\n    contacts: [],\n    dispatch: (action) => this.setState((state) => reducer(this.state, action)),\n  };\n\n  async componentDidMount() {\n    const { data: contacts } = await axios.get(\n      \"https://jsonplaceholder.typicode.com/users\"\n    );\n\n    this.setState({ contacts });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../Context\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Contact extends Component {\n  static propTypes = {\n    contact: PropTypes.object.isRequired,\n  };\n\n  state = {\n    isInfoShown: false,\n  };\n\n  onShowClick = () => {\n    this.setState({ isInfoShown: !this.state.isInfoShown });\n  };\n\n  onDeleteClick = async (dispatch, id) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    } catch (error) {\n    } finally {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    const { name, email, phone, id } = this.props.contact;\n    return (\n      <Consumer>\n        {({ dispatch }) => (\n          <div className=\"card card-body mb-3\">\n            <h4 style={{ display: \"flex\" }}>\n              {name}{\" \"}\n              <i\n                className=\"fas fa-sort-down\"\n                onClick={this.onShowClick}\n                style={{ cursor: \"pointer\" }}\n              ></i>\n              <Link\n                to={`contact/edit/${id}`}\n                style={{\n                  cursor: \"pointer\",\n                  marginLeft: \"auto\",\n                  marginRight: \"1em\",\n                }}\n              >\n                <i className=\"fas fa-pencil-alt\"></i>\n              </Link>\n              <i\n                className=\"fas fa-times\"\n                onClick={this.onDeleteClick.bind(this, dispatch, id)}\n                style={{ cursor: \"pointer\", color: \"red\" }}\n              ></i>\n            </h4>\n            {this.state.isInfoShown ? (\n              <ul className=\"list-group\">\n                <li className=\"list-group-item\">Email: {email}</li>\n                <li className=\"list-group-item\">phone: {phone}</li>\n              </ul>\n            ) : null}\n          </div>\n        )}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contact;\n","import React from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../Context\";\n\nclass Contacts extends React.Component {\n  render() {\n    return (\n      <Consumer>\n        {({ contacts }) => (\n          <>\n            <h1 className=\"display-4 mb-2\">\n              <span className=\"text-danger\">Contact</span> List\n            </h1>\n            {contacts.map((c) => (\n              <Contact key={c.id} contact={c}></Contact>\n            ))}\n          </>\n        )}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  name,\n  label,\n  type,\n  placeholder,\n  value,\n  onChange,\n  error,\n}) => (\n  <div className=\"form-group\">\n    <label htmlFor={name}>{label}</label>\n    <input\n      type={type}\n      name={name}\n      className={classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": error,\n      })}\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n    />\n    {error && <div className=\"invalid-feedback\">{error}</div>}\n  </div>\n);\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\",\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n\n  onChange = (evt) => this.setState({ [evt.target.name]: evt.target.value });\n\n  onSubmit = async (dispatch, evt) => {\n    evt.preventDefault();\n    const { name, email, phone } = this.state;\n    if (!name.length) {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (!email.length) {\n      this.setState({ errors: { email: \"Name is required\" } });\n      return;\n    }\n\n    if (!phone.length) {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const { data } = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users/\",\n      this.state\n    );\n\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: data,\n    });\n\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {({ dispatch }) => (\n          <div className=\"card mb-3\">\n            <div className=\"card-header\">Add Contact</div>\n            <form\n              className=\"card-body\"\n              onSubmit={this.onSubmit.bind(this, dispatch)}\n            >\n              <TextInputGroup\n                label=\"Name\"\n                name=\"name\"\n                value={name}\n                placeholder=\"Enter name\"\n                onChange={this.onChange}\n                error={errors.name}\n              ></TextInputGroup>\n              <TextInputGroup\n                label=\"Email\"\n                name=\"email\"\n                type=\"email\"\n                value={email}\n                placeholder=\"Enter email\"\n                onChange={this.onChange}\n                error={errors.email}\n              ></TextInputGroup>\n              <TextInputGroup\n                label=\"Phone\"\n                name=\"phone\"\n                type=\"tel\"\n                value={phone}\n                placeholder=\"Enter phone\"\n                onChange={this.onChange}\n                error={errors.phone}\n              ></TextInputGroup>\n\n              <button type=\"submit\" className=\"btn btn-light btn-block\">\n                Add Contact\n              </button>\n            </form>\n          </div>\n        )}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React from \"react\";\n\nexport default () => (\n  <div>\n    <h4 className=\"display-4\">Abount Contact Manager</h4>\n    <p className=\"lead\">Simple app to manage contacts</p>\n    <div className=\"text-secondary\">Version 1.0</div>\n  </div>\n);\n","import React from \"react\";\n\nexport default () => (\n  <div>\n    <h1 className=\"display-4\">\n      <span className=\"text-danger\">404</span> Page Not Found\n    </h1>\n    <p className=\"lead\">Sorry, that page does not exist</p>\n  </div>\n);\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\",\n  };\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const { data } = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    this.setState({ name: data.name, email: data.email, phone: data.phone });\n  }\n\n  onChange = (evt) => this.setState({ [evt.target.name]: evt.target.value });\n\n  onSubmit = async (dispatch, evt) => {\n    evt.preventDefault();\n    const { name, email, phone } = this.state;\n    if (!name.length) {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (!email.length) {\n      this.setState({ errors: { email: \"Name is required\" } });\n      return;\n    }\n\n    if (!phone.length) {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      { name, email, phone }\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {({ dispatch }) => (\n          <div className=\"card mb-3\">\n            <div className=\"card-header\">Edit Contact</div>\n            <form\n              className=\"card-body\"\n              onSubmit={this.onSubmit.bind(this, dispatch)}\n            >\n              <TextInputGroup\n                label=\"Name\"\n                name=\"name\"\n                value={name}\n                placeholder=\"Enter name\"\n                onChange={this.onChange}\n                error={errors.name}\n              ></TextInputGroup>\n              <TextInputGroup\n                label=\"Email\"\n                name=\"email\"\n                type=\"email\"\n                value={email}\n                placeholder=\"Enter email\"\n                onChange={this.onChange}\n                error={errors.email}\n              ></TextInputGroup>\n              <TextInputGroup\n                label=\"Phone\"\n                name=\"phone\"\n                type=\"tel\"\n                value={phone}\n                placeholder=\"Enter phone\"\n                onChange={this.onChange}\n                error={errors.phone}\n              ></TextInputGroup>\n\n              <button type=\"submit\" className=\"btn btn-light btn-block\">\n                Update Contact\n              </button>\n            </form>\n          </div>\n        )}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport { Provider } from \"./Context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/NotFound\";\nimport Test from \"./components/test/Test\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header></Header>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}></Route>\n              <Route exact path=\"/contact-add\" component={AddContact}></Route>\n              <Route\n                exact\n                path=\"/contact/edit/:id\"\n                component={EditContact}\n              ></Route>\n              <Route exact path=\"/about\" component={About}></Route>\n              <Route exact path=\"/test\" component={Test}></Route>\n              <Route component={NotFound}></Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}