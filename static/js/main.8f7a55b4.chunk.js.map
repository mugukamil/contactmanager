{"version":3,"sources":["components/layout/Header.js","Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/hooks/useInput.js","components/contacts/AddContact.js","components/pages/About.js","components/NotFound.js","components/test/Test.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","to","branding","defaultProps","Context","React","createContext","Provider","StateProvider","children","useReducer","state","action","type","contacts","payload","filter","contact","id","map","dispatch","useEffect","a","axios","get","data","fetchContacts","value","Contact","useContext","useState","isInfoShown","setIsInfoShown","onDeleteClick","delete","name","email","phone","style","display","onClick","cursor","marginLeft","marginRight","color","Contacts","store","c","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","initialValue","setValue","reset","bind","event","target","AddContact","useInput","resetName","bindName","resetPhone","bindPhone","resetEmail","bindEmail","errors","setErrors","onSubmit","evt","preventDefault","post","history","push","Test","title","body","this","Component","EditContact","setName","setPhone","setEmail","match","params","fetchContact","put","res","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"iQAIA,SAASA,EAAOC,GACd,OACE,yBAAKC,UAAU,2DACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gBACpBD,EAAMG,UAET,wBAAIF,UAAU,sBACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,YACrB,uBAAGA,UAAU,gBADf,UAIF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMC,GAAG,eAAeD,UAAU,YAChC,uBAAGA,UAAU,gBADf,SAIF,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,YAC1B,uBAAGA,UAAU,oBADf,cAUZF,EAAOK,aAAe,CACpBD,SAAU,mBAOGJ,Q,uECrCTM,EAAUC,IAAMC,gBACdC,EAAaH,EAAbG,SAEFC,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACZC,sBAAW,SAACC,EAAOC,GAC3C,OAAQA,EAAOC,MACb,IAAK,eACH,MAAO,CAAEC,SAAUF,EAAOG,SAC5B,IAAK,iBACH,OAAO,2BACFJ,GADL,IAEEG,SAAUH,EAAMG,SAASE,QACvB,SAACC,GAAD,OAAaA,EAAQC,KAAON,EAAOG,aAGzC,IAAK,cACH,OAAO,2BACFJ,GADL,IAEEG,SAAS,CAAEF,EAAOG,SAAV,mBAAsBJ,EAAMG,aAExC,IAAK,iBACH,OAAO,2BACFH,GADL,IAEEG,SAAUH,EAAMG,SAASK,KAAI,SAACF,GAAD,OAC3BA,EAAQC,KAAON,EAAOG,QAAQG,GACzBD,EAAUL,EAAOG,QAClBE,OAIV,QACE,OAAON,KAEV,IA9BmC,mBAC/BA,EAD+B,KACxBS,EADwB,KA2CtC,OAXAC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACmCC,IAAMC,IACrC,8CAFJ,gBACgBV,EADhB,EACUW,KAIRL,EAAS,CAAEP,KAAM,eAAgBE,QAASD,IAL5C,4CADc,uBAAC,WAAD,wBAQdY,KACC,CAACN,IAEG,kBAACb,EAAD,CAAUoB,MAAO,CAAEhB,QAAOS,aAAaX,IC7CjC,SAASmB,EAAQ7B,GAC9B,IACQqB,EADMS,qBAAWzB,GACjBgB,SAF6B,EAGCU,oBAAS,GAHV,mBAG9BC,EAH8B,KAGjBC,EAHiB,KAS/BC,EAAa,uCAAG,WAAOf,GAAP,SAAAI,EAAA,+EAEZC,IAAMW,OAAN,qDAA2DhB,IAF/C,6EAKlBE,EAAS,CAAEP,KAAM,iBAAkBE,QAASG,IAL1B,0EAAH,sDATkB,EAiBFnB,EAAMkB,QAAjCkB,EAjB6B,EAiB7BA,KAAMC,EAjBuB,EAiBvBA,MAAOC,EAjBgB,EAiBhBA,MAAOnB,EAjBS,EAiBTA,GAC5B,OACE,yBAAKlB,UAAU,uBACb,wBAAIsC,MAAO,CAAEC,QAAS,SACnBJ,EAAM,IACP,uBACEnC,UAAU,mBACVwC,QAnBY,WAClBR,GAAgBD,IAmBVO,MAAO,CAAEG,OAAQ,aAEnB,kBAAC,IAAD,CACExC,GAAE,uBAAkBiB,GACpBoB,MAAO,CACLG,OAAQ,UACRC,WAAY,OACZC,YAAa,QAGf,uBAAG3C,UAAU,uBAEf,uBACEA,UAAU,eACVwC,QAAS,kBAAMP,EAAcf,IAC7BoB,MAAO,CAAEG,OAAQ,UAAWG,MAAO,UAGtCb,EACC,wBAAI/B,UAAU,cACZ,wBAAIA,UAAU,mBAAd,UAAwCoC,GACxC,wBAAIpC,UAAU,mBAAd,UAAwCqC,IAExC,MChDK,SAASQ,IAAY,IAAD,EAC3BC,EAAQjB,qBAAWzB,GACjBO,EAAoBmC,EAApBnC,MAAoBmC,EAAb1B,SAEf,OACE,kBAAC,WAAD,KACE,wBAAIpB,UAAU,kBACZ,0BAAMA,UAAU,eAAhB,WADF,SADF,UAIGW,EAAMG,gBAJT,aAIG,EAAgBK,KAAI,SAAC4B,GAAD,OACnB,kBAACnB,EAAD,CAASoB,IAAKD,EAAE7B,GAAID,QAAS8B,Q,qBCX/BE,EAAiB,SAAC,GAAD,IACrBd,EADqB,EACrBA,KACAe,EAFqB,EAErBA,MACArC,EAHqB,EAGrBA,KACAsC,EAJqB,EAIrBA,YACAxB,EALqB,EAKrBA,MACAyB,EANqB,EAMrBA,SACAC,EAPqB,EAOrBA,MAPqB,OASrB,yBAAKrD,UAAU,cACb,2BAAOsD,QAASnB,GAAOe,GACvB,2BACErC,KAAMA,EACNsB,KAAMA,EACNnC,UAAWuD,IAAW,+BAAgC,CACpD,aAAcF,IAEhBF,YAAaA,EACbxB,MAAOA,EACPyB,SAAUA,IAEXC,GAAS,yBAAKrD,UAAU,oBAAoBqD,KAcjDJ,EAAe9C,aAAe,CAC5BU,KAAM,QAGOoC,QCzCA,WAACO,GAAkB,IAAD,EACL1B,mBAAS0B,GADJ,mBACxB7B,EADwB,KACjB8B,EADiB,KAG/B,MAAO,CACL9B,QACA8B,WACAC,MAAO,kBAAMD,EAAS,KACtBE,KAAM,CACJhC,QACAyB,SAAU,SAACQ,GACTH,EAASG,EAAMC,OAAOlC,WCNf,SAASmC,EAAW/D,GACjC,IACQqB,EADMS,qBAAWzB,GACjBgB,SAFgC,EAGkB2C,EAAS,IAApD5B,EAHyB,EAGhCR,MAAoBqC,EAHY,EAGnBN,MAAwBO,EAHL,EAGDN,KAHC,EAIqBI,EAAS,IAAvD1B,EAJyB,EAIhCV,MAAqBuC,EAJW,EAIlBR,MAAyBS,EAJP,EAICR,KAJD,EAKqBI,EAAS,IAAvD3B,EALyB,EAKhCT,MAAqByC,EALW,EAKlBV,MAAyBW,EALP,EAKCV,KALD,EAMZ7B,mBAAS,IANG,mBAMjCwC,EANiC,KAMzBC,EANyB,KAQlCC,EAAQ,uCAAG,WAAOC,GAAP,iBAAAnD,EAAA,yDACfmD,EAAIC,iBACS,KAATvC,EAFW,uBAGboC,EAAU,2BAAKD,GAAN,IAAcnC,KAAM,sBAHhB,6BAOD,KAAVC,EAPW,uBAQbmC,EAAU,2BAAKD,GAAN,IAAclC,MAAO,uBARjB,6BAYD,KAAVC,EAZW,wBAabkC,EAAU,2BAAKD,GAAN,IAAcjC,MAAO,uBAbjB,4CAiBQd,IAAMoD,KAC3B,8CACA,CACExC,OACAE,QACAD,UAtBW,iBAiBPX,EAjBO,EAiBPA,KASRL,EAAS,CACPP,KAAM,cACNE,QAASU,IAGXuC,IACAE,IACAE,IACAG,EAAU,IACVxE,EAAM6E,QAAQC,KAAK,KAnCJ,4CAAH,sDAsCd,OACE,yBAAK7E,UAAU,aACb,yBAAKA,UAAU,eAAf,eACA,0BAAMA,UAAU,YAAYwE,SAAUA,GACpC,kBAAC,EAAD,eACEtB,MAAM,OACNf,KAAK,OACLgB,YAAY,aACZE,MAAOiB,EAAOnC,MACV8B,IAEN,kBAAC,EAAD,eACEf,MAAM,QACNf,KAAK,QACLtB,KAAK,QACLsC,YAAY,cACZE,MAAOiB,EAAOlC,OACViC,IAEN,kBAAC,EAAD,eACEnB,MAAM,QACNf,KAAK,QACLtB,KAAK,MACLsC,YAAY,cACZE,MAAOiB,EAAOjC,OACV8B,IAGN,4BAAQtD,KAAK,SAASb,UAAU,2BAAhC,iB,WC9EO,oBACb,6BACE,wBAAIA,UAAU,aAAd,0BACA,uBAAGA,UAAU,QAAb,iCACA,yBAAKA,UAAU,kBAAf,iBCJW,oBACb,6BACE,wBAAIA,UAAU,aACZ,0BAAMA,UAAU,eAAhB,OADF,mBAGA,uBAAGA,UAAU,QAAb,qC,gCCYW8E,E,4MAhBbnE,MAAQ,CACNoE,MAAO,GACPC,KAAM,I,uDAGE,IAAD,EACiBC,KAAKtE,MAArBoE,EADD,EACCA,MAAOC,EADR,EACQA,KACf,OACE,6BACE,4BAAKD,GACL,2BAAIC,Q,GAXOE,aCIJ,SAASC,EAAYpF,GAClC,IACQqB,EADMS,qBAAWzB,GACjBgB,SAFiC,EAQrC2C,EAAS,IAJJ5B,EAJgC,EAIvCR,MACUyD,EAL6B,EAKvC3B,SACOO,EANgC,EAMvCN,MACMO,EAPiC,EAOvCN,KAPuC,EAcrCI,EAAS,IAJJ1B,EAVgC,EAUvCV,MACU0D,EAX6B,EAWvC5B,SACOS,EAZgC,EAYvCR,MACMS,EAbiC,EAavCR,KAbuC,EAoBrCI,EAAS,IAJJ3B,EAhBgC,EAgBvCT,MACU2D,EAjB6B,EAiBvC7B,SACOW,EAlBgC,EAkBvCV,MACMW,EAnBiC,EAmBvCV,KAnBuC,EAqBb7B,mBAAS,IArBI,mBAqBlCwC,EArBkC,KAqB1BC,EArB0B,KAuBzClD,qBAAU,WAAM,4CACd,gCAAAC,EAAA,6DACUJ,EAAOnB,EAAMwF,MAAMC,OAAnBtE,GADV,SAEyBK,IAAMC,IAAN,qDACyBN,IAHlD,gBAEUO,EAFV,EAEUA,KAIR2D,EAAQ3D,EAAKU,MACbkD,EAAS5D,EAAKY,OACdiD,EAAS7D,EAAKW,OARhB,4CADc,uBAAC,WAAD,wBAWdqD,KACC,CAACL,EAASC,EAAUC,EAAUvF,EAAMwF,MAAMC,SAE7C,IAAMhB,EAAQ,uCAAG,WAAOC,GAAP,iBAAAnD,EAAA,yDACfmD,EAAIC,iBACS,KAATvC,EAFW,uBAGboC,EAAU,2BAAKD,GAAN,IAAcnC,KAAM,sBAHhB,6BAOD,KAAVC,EAPW,uBAQbmC,EAAU,2BAAKD,GAAN,IAAclC,MAAO,uBARjB,6BAYD,KAAVC,EAZW,wBAabkC,EAAU,2BAAKD,GAAN,IAAcjC,MAAO,uBAbjB,kCAiBPnB,EAAOnB,EAAMwF,MAAMC,OAAnBtE,GAjBO,UAmBGK,IAAMmE,IAAN,qDAC8BxE,GAC9C,CAAEiB,OAAMC,QAAOC,UArBF,QAmBTsD,EAnBS,OAwBfvE,EAAS,CAAEP,KAAM,iBAAkBE,QAAS4E,EAAIlE,OAEhDuC,IACAE,IACAE,IACAG,EAAU,IACVxE,EAAM6E,QAAQC,KAAK,KA9BJ,4CAAH,sDAiCd,OACE,yBAAK7E,UAAU,aACb,yBAAKA,UAAU,eAAf,gBACA,0BAAMA,UAAU,YAAYwE,SAAUA,GACpC,kBAAC,EAAD,eACEtB,MAAM,OACNf,KAAK,OACLgB,YAAY,aACZE,MAAOiB,EAAOnC,MACV8B,IAEN,kBAAC,EAAD,eACEf,MAAM,QACNf,KAAK,QACLtB,KAAK,QACLsC,YAAY,cACZE,MAAOiB,EAAOlC,OACViC,IAEN,kBAAC,EAAD,eACEnB,MAAM,QACNf,KAAK,QACLtB,KAAK,MACLsC,YAAY,cACZE,MAAOiB,EAAOjC,OACV8B,IAGN,4BAAQtD,KAAK,SAASb,UAAU,2BAAhC,oBCjEO4F,MA1Bf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,yBAAK5F,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6F,OAAK,EAACC,KAAK,IAAIC,UAAWlD,IACjC,kBAAC,IAAD,CAAOgD,OAAK,EAACC,KAAK,eAAeC,UAAWjC,IAC5C,kBAAC,IAAD,CACE+B,OAAK,EACLC,KAAK,oBACLC,UAAWZ,IAEb,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,SAASC,UAAWC,IACtC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,QAAQC,UAAWjB,IACrC,kBAAC,IAAD,CAAOiB,UAAWE,UClBZC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASd,MACvB,2DCZNe,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA5D,GACL6D,QAAQ7D,MAAMA,EAAM8D,c","file":"static/js/main.8f7a55b4.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header(props) {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          {props.branding}\n        </Link>\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link to=\"/\" className=\"nav-link\">\n              <i className=\"fas fa-home\"></i> Home\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/contact-add\" className=\"nav-link\">\n              <i className=\"fas fa-plus\"></i> Add\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/about\" className=\"nav-link\">\n              <i className=\"fas fa-question\"></i> About\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nHeader.defaultProps = {\n  branding: \"Contact Manager\",\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\n\nconst Context = React.createContext();\nconst { Provider } = Context;\n\nconst StateProvider = ({ children }) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"GET_CONTACTS\":\n        return { contacts: action.payload };\n      case \"DELETE_CONTACT\":\n        return {\n          ...state,\n          contacts: state.contacts.filter(\n            (contact) => contact.id !== action.payload\n          ),\n        };\n      case \"ADD_CONTACT\":\n        return {\n          ...state,\n          contacts: [action.payload, ...state.contacts],\n        };\n      case \"UPDATE_CONTACT\":\n        return {\n          ...state,\n          contacts: state.contacts.map((contact) =>\n            contact.id === action.payload.id\n              ? (contact = action.payload)\n              : contact\n          ),\n        };\n\n      default:\n        return state;\n    }\n  }, {});\n\n  useEffect(() => {\n    async function fetchContacts() {\n      const { data: contacts } = await axios.get(\n        \"https://jsonplaceholder.typicode.com/users\"\n      );\n\n      dispatch({ type: \"GET_CONTACTS\", payload: contacts });\n    }\n    fetchContacts();\n  }, [dispatch]);\n\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\n};\n\nexport { Context, StateProvider };\n","import React, { useState, useContext } from \"react\";\nimport { Context } from \"../../Context\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Contact(props) {\n  const store = useContext(Context);\n  const { dispatch } = store;\n  const [isInfoShown, setIsInfoShown] = useState(false);\n\n  const onShowClick = () => {\n    setIsInfoShown(!isInfoShown);\n  };\n\n  const onDeleteClick = async (id) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    } catch (error) {\n    } finally {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n  const { name, email, phone, id } = props.contact;\n  return (\n    <div className=\"card card-body mb-3\">\n      <h4 style={{ display: \"flex\" }}>\n        {name}{\" \"}\n        <i\n          className=\"fas fa-sort-down\"\n          onClick={onShowClick}\n          style={{ cursor: \"pointer\" }}\n        ></i>\n        <Link\n          to={`contact/edit/${id}`}\n          style={{\n            cursor: \"pointer\",\n            marginLeft: \"auto\",\n            marginRight: \"1em\",\n          }}\n        >\n          <i className=\"fas fa-pencil-alt\"></i>\n        </Link>\n        <i\n          className=\"fas fa-times\"\n          onClick={() => onDeleteClick(id)}\n          style={{ cursor: \"pointer\", color: \"red\" }}\n        ></i>\n      </h4>\n      {isInfoShown ? (\n        <ul className=\"list-group\">\n          <li className=\"list-group-item\">Email: {email}</li>\n          <li className=\"list-group-item\">phone: {phone}</li>\n        </ul>\n      ) : null}\n    </div>\n  );\n}\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport Contact from \"./Contact\";\nimport { Context } from \"../../Context\";\nimport axios from \"axios\";\n\nexport default function Contacts() {\n  const store = useContext(Context);\n  const { state, dispatch } = store;\n\n  return (\n    <Fragment>\n      <h1 className=\"display-4 mb-2\">\n        <span className=\"text-danger\">Contact</span> List\n      </h1>\n      {state.contacts?.map((c) => (\n        <Contact key={c.id} contact={c}></Contact>\n      ))}\n    </Fragment>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  name,\n  label,\n  type,\n  placeholder,\n  value,\n  onChange,\n  error,\n}) => (\n  <div className=\"form-group\">\n    <label htmlFor={name}>{label}</label>\n    <input\n      type={type}\n      name={name}\n      className={classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": error,\n      })}\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n    />\n    {error && <div className=\"invalid-feedback\">{error}</div>}\n  </div>\n);\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\",\n};\n\nexport default TextInputGroup;\n","import { useState } from \"react\";\n\nexport default (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    setValue,\n    reset: () => setValue(\"\"),\n    bind: {\n      value,\n      onChange: (event) => {\n        setValue(event.target.value);\n      },\n    },\n  };\n};\n","import React, { useContext, useState } from \"react\";\nimport { Context } from \"../../Context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\nimport useInput from \"../hooks/useInput\";\n\nexport default function AddContact(props) {\n  const store = useContext(Context);\n  const { dispatch } = store;\n  const { value: name, reset: resetName, bind: bindName } = useInput(\"\");\n  const { value: phone, reset: resetPhone, bind: bindPhone } = useInput(\"\");\n  const { value: email, reset: resetEmail, bind: bindEmail } = useInput(\"\");\n  const [errors, setErrors] = useState({});\n\n  const onSubmit = async (evt) => {\n    evt.preventDefault();\n    if (name === \"\") {\n      setErrors({ ...errors, name: \"Name is required\" });\n      return;\n    }\n\n    if (email === \"\") {\n      setErrors({ ...errors, email: \"Email is required\" });\n      return;\n    }\n\n    if (phone === \"\") {\n      setErrors({ ...errors, phone: \"Phone is required\" });\n      return;\n    }\n\n    const { data } = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users/\",\n      {\n        name,\n        phone,\n        email,\n      }\n    );\n\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: data,\n    });\n\n    resetName();\n    resetPhone();\n    resetEmail();\n    setErrors({});\n    props.history.push(\"/\");\n  };\n\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-header\">Add Contact</div>\n      <form className=\"card-body\" onSubmit={onSubmit}>\n        <TextInputGroup\n          label=\"Name\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          error={errors.name}\n          {...bindName}\n        ></TextInputGroup>\n        <TextInputGroup\n          label=\"Email\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Enter email\"\n          error={errors.email}\n          {...bindEmail}\n        ></TextInputGroup>\n        <TextInputGroup\n          label=\"Phone\"\n          name=\"phone\"\n          type=\"tel\"\n          placeholder=\"Enter phone\"\n          error={errors.phone}\n          {...bindPhone}\n        ></TextInputGroup>\n\n        <button type=\"submit\" className=\"btn btn-light btn-block\">\n          Add Contact\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default () => (\n  <div>\n    <h4 className=\"display-4\">Abount Contact Manager</h4>\n    <p className=\"lead\">Simple app to manage contacts</p>\n    <div className=\"text-secondary\">Version 1.0</div>\n  </div>\n);\n","import React from \"react\";\n\nexport default () => (\n  <div>\n    <h1 className=\"display-4\">\n      <span className=\"text-danger\">404</span> Page Not Found\n    </h1>\n    <p className=\"lead\">Sorry, that page does not exist</p>\n  </div>\n);\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\",\n  };\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Context } from \"../../Context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\nimport useInput from \"../hooks/useInput\";\n\nexport default function EditContact(props) {\n  const store = useContext(Context);\n  const { dispatch } = store;\n  const {\n    value: name,\n    setValue: setName,\n    reset: resetName,\n    bind: bindName,\n  } = useInput(\"\");\n  const {\n    value: phone,\n    setValue: setPhone,\n    reset: resetPhone,\n    bind: bindPhone,\n  } = useInput(\"\");\n  const {\n    value: email,\n    setValue: setEmail,\n    reset: resetEmail,\n    bind: bindEmail,\n  } = useInput(\"\");\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    async function fetchContact() {\n      const { id } = props.match.params;\n      const { data } = await axios.get(\n        `https://jsonplaceholder.typicode.com/users/${id}`\n      );\n\n      setName(data.name);\n      setPhone(data.phone);\n      setEmail(data.email);\n    }\n    fetchContact();\n  }, [setName, setPhone, setEmail, props.match.params]);\n\n  const onSubmit = async (evt) => {\n    evt.preventDefault();\n    if (name === \"\") {\n      setErrors({ ...errors, name: \"Name is required\" });\n      return;\n    }\n\n    if (email === \"\") {\n      setErrors({ ...errors, email: \"Email is required\" });\n      return;\n    }\n\n    if (phone === \"\") {\n      setErrors({ ...errors, phone: \"Phone is required\" });\n      return;\n    }\n\n    const { id } = props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      { name, email, phone }\n    );\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    resetName();\n    resetPhone();\n    resetEmail();\n    setErrors({});\n    props.history.push(\"/\");\n  };\n\n  return (\n    <div className=\"card mb-3\">\n      <div className=\"card-header\">Edit Contact</div>\n      <form className=\"card-body\" onSubmit={onSubmit}>\n        <TextInputGroup\n          label=\"Name\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          error={errors.name}\n          {...bindName}\n        ></TextInputGroup>\n        <TextInputGroup\n          label=\"Email\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Enter email\"\n          error={errors.email}\n          {...bindEmail}\n        ></TextInputGroup>\n        <TextInputGroup\n          label=\"Phone\"\n          name=\"phone\"\n          type=\"tel\"\n          placeholder=\"Enter phone\"\n          error={errors.phone}\n          {...bindPhone}\n        ></TextInputGroup>\n\n        <button type=\"submit\" className=\"btn btn-light btn-block\">\n          Update Contact\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport { StateProvider } from \"./Context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/NotFound\";\nimport Test from \"./components/test/Test\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nfunction App() {\n  return (\n    <StateProvider>\n      <Router>\n        <div className=\"App\">\n          <Header></Header>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}></Route>\n              <Route exact path=\"/contact-add\" component={AddContact}></Route>\n              <Route\n                exact\n                path=\"/contact/edit/:id\"\n                component={EditContact}\n              ></Route>\n              <Route exact path=\"/about\" component={About}></Route>\n              <Route exact path=\"/test\" component={Test}></Route>\n              <Route component={NotFound}></Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </StateProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}